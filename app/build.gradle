apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.target_sdk_version

    defaultConfig {
        applicationId "io.audioshinigami.superd"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode 9
        versionName "0.36"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue "string", "my_name", "Super D-debug"

            minifyEnabled false
            testCoverageEnabled true
//            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        beta {
            applicationIdSuffix ".alpha"
            versionNameSuffix "-beta"
            resValue "string", "my_name", "Super D-beta"

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        alpha {
            minifyEnabled true
            applicationIdSuffix ".alpha"
            versionNameSuffix "-alpha"
            resValue "string", "my_name", "Super alpha"
        }
    }
    packagingOptions {
        exclude 'README.txt'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }


    kotlinOptions {
        jvmTarget = '1.8'
    }
}

/* dependencies versions are defined in build.gradle project level file */
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // App dependencies
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine_version"
    // Architecture components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    //Paging
    implementation "androidx.paging:paging-runtime:$paging_version"
    // Navigation components
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // Room Db
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    kapt "androidx.room:room-compiler:$room_version"
    // 3rd Party
    // Fetch2
    implementation "androidx.tonyodev.fetch2:xfetch2:$fetch2_version"
    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"
    // Dagger2
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger2_version"

    // AndroidX tests dependencies ###
    androidTestImplementation "androidx.test:core-ktx:$test_core_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$test_ext_kotlin_runner_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    androidTestImplementation "org.hamcrest:hamcrest:$hamcrest_version"
    androidTestImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dex_maker_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$test_coroutine_version"
    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$expresso_core_version"

    // Unit tests
    testImplementation "androidx.test:core-ktx:$test_core_version"
    testImplementation "androidx.test:rules:$test_rules_version"
    testImplementation "androidx.test.ext:junit-ktx:$test_ext_kotlin_runner_version"
    testImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    testImplementation "org.hamcrest:hamcrest:$hamcrest_version"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dex_maker_version"
    testImplementation "com.google.truth:truth:$truth_version"

    // Coroutines test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$test_coroutine_version"
}
